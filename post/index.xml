<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on bllon</title><link>https://bllon.github.io/post/</link><description>Recent content in Posts on bllon</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 26 Jul 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://bllon.github.io/post/index.xml" rel="self" type="application/rss+xml"/><item><title>docker build缓存依赖项</title><link>https://bllon.github.io/p/docker-build-cache/</link><pubDate>Wed, 26 Jul 2023 00:00:00 +0000</pubDate><guid>https://bllon.github.io/p/docker-build-cache/</guid><description>&lt;h2 id="使用命令">使用命令&lt;/h2>
&lt;p>&lt;a class="link" href="https://docs.docker.com/engine/reference/builder/#run---mount" target="_blank" rel="noopener"
>docker build 缓存使用&lt;/a>&lt;/p>
&lt;p>Go项目使用缓存依赖示例，Dockerfile中使用&amp;ndash;mount&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">RUN --mount&lt;span class="o">=&lt;/span>&lt;span class="nv">type&lt;/span>&lt;span class="o">=&lt;/span>cache,mode&lt;span class="o">=&lt;/span>0777,id&lt;span class="o">=&lt;/span>go-mod,target&lt;span class="o">=&lt;/span>/go/pkg/mod &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> go env -w &lt;span class="nv">GOPROXY&lt;/span>&lt;span class="o">=&lt;/span>https://goproxy.cn,direct &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> go mod tidy &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> go build -o main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Anaconda安装</title><link>https://bllon.github.io/p/anaconda-install/</link><pubDate>Sat, 22 Jul 2023 00:00:00 +0000</pubDate><guid>https://bllon.github.io/p/anaconda-install/</guid><description>&lt;h2 id="anaconda官网下载地址">anaconda官网下载地址&lt;/h2>
&lt;p>&lt;a class="link" href="https://www.anaconda.com/download" target="_blank" rel="noopener"
>官网地址&lt;/a>&lt;/p>
&lt;p>直接下一步安装即可&lt;/p>
&lt;h2 id="配置环境变量">配置环境变量&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">D:\ProgramData\anaconda3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">D:\ProgramData\anaconda3\Scripts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">D:\ProgramData\anaconda3\Library\mingw-w64\bin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">D:\ProgramData\anaconda3\Library\usr\bin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">D:\ProgramData\anaconda3\Library\bin
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">查看python版本
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">python
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">查看conda版本
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">conda --version
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">查看环境
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">conda info
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">conda info -e
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">conda env list
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">conda info --envs
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="创建虚拟环境">创建虚拟环境&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">conda create --name env python=3.9.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">切换环境
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">conda activate env
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">退出环境
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">conda deactivate
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">删除环境
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">conda remove -n env --all
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="powershell无法切换环境">PowerShell无法切换环境&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">允许本地脚本
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Set-ExecutionPolicy RemoteSigned
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">重置conda环境
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">conda init powershell
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">重新打开窗口
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">conda env list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>ed25519加密算法使用</title><link>https://bllon.github.io/p/ed25519/</link><pubDate>Sat, 22 Jul 2023 00:00:00 +0000</pubDate><guid>https://bllon.github.io/p/ed25519/</guid><description>&lt;h2 id="介绍">介绍&lt;/h2>
&lt;blockquote>
&lt;p>Ed25519是一个公钥签名系统。
快速单签名验证，该软件只需要273364个周期来验证英特尔广泛部署的Nehalem/Westmere系列cpu上的签名。(此性能测量是针对短消息的;对于非常长的消息，验证时间主要由哈希时间决定。)Nehalem和Westmere包括2008年至2010年间发布的所有酷睿i7、i5和i3 cpu，以及同一时期发布的大部分至强cpu。
甚至更快的批量验证，该软件执行一批64个单独的签名验证(在64个公钥下验证64个消息的64个签名)，仅855万次循环，即每个签名在134000次循环以下。该软件很容易适应L1缓存，因此内核之间的争用可以忽略:四核2.4GHz的Westmere每秒验证71000个签名，同时将最大验证延迟保持在4毫秒以下。
非常快的签名，该软件只需要87548个周期来签署消息。四核2.4GHz韦斯特米尔每秒可签署109000条消息。
快速生成密钥，密钥生成几乎和签名一样快。为了从操作系统获得安全的随机数，生成密钥会有轻微的代价;Linux下的/dev/urandom大约需要6000个循环。
安全级别高，该系统的安全目标为2^128;破解它的难度与破解NIST P-256、拥有3000位密钥的RSA、强128位分组密码等类似。已知的最佳攻击实际上平均花费超过2^140位操作，并且随着位操作数量的下降，成功概率呈二次下降。
万无一失的会话密钥。确定地生成签名;密钥生成需要新的随机性，但新签名不需要。这不仅是一个速度特性，也是一个安全特性，与最近索尼PlayStation 3安全系统崩溃直接相关。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>ED25519是一个非对称加密的签名方法，非常快、非常安全、产生的数据也非常小。&lt;/p>
&lt;/blockquote>
&lt;h3 id="ed25519的签名长度公钥长度是多少">ED25519的签名长度，公钥长度是多少？&lt;/h3>
&lt;blockquote>
&lt;p>签名长度为64字节，公钥长度为32字节&lt;/p>
&lt;/blockquote>
&lt;h3 id="什么是数字签名">什么是数字签名？&lt;/h3>
&lt;blockquote>
&lt;p>数字签名（又称公钥数字签名）是只有信息的发送者才能产生的别人无法伪造的一段数字串，这段数字串同时也是对信息的发送者发送信息真实性的一个有效证明。
是用于鉴别数字信息的方法，有签名并有验证。数字签名是非对称密钥加密技术（如ED25519）与数字摘要技术的应用。
数字签名就是附加在数据单元上的一些数据，或者是针对数据所做出的一种密码变换。这种数据或变换允许数据单元的接收者用以确认数据单元的来源和数据单元的完整性并保护数据，即数字签名与验证同在。&lt;/p>
&lt;/blockquote>
&lt;h3 id="数字签名的级别">数字签名的级别？&lt;/h3>
&lt;blockquote>
&lt;p>数字签名的级别是很高的，是具备不可否定性的。&lt;/p>
&lt;/blockquote>
&lt;h3 id="数字签名大致有哪些算法">数字签名大致有哪些算法？&lt;/h3>
&lt;blockquote>
&lt;p>RSA、ElGamal、Fiat-Shamir、Guillou- Quisquarter、Schnorr、Ong-Schnorr-Shamir数字签名算法、Des/DSA，椭圆曲线数字签名算法和有限自动机数字签名算法等。特殊数字签名有盲签名、代理签名、群签名、不可否认签名、公平盲签名、门限签名、具有消息恢复功能的签名等。
目前用到的是“椭圆曲线数字签名（ECDSA）”。&lt;/p>
&lt;/blockquote>
&lt;h3 id="什么是椭圆曲线数字签名ecdsa">什么是“椭圆曲线数字签名(ECDSA)”？&lt;/h3>
&lt;blockquote>
&lt;p>简称ECC算法，是基于数学理论的椭圆曲线来实现的一种“非对称加密”算法。&lt;/p>
&lt;/blockquote>
&lt;h3 id="ecc的特点">ECC的特点？&lt;/h3>
&lt;blockquote>
&lt;p>密钥的长度很短，高安全。&lt;/p>
&lt;/blockquote>
&lt;h3 id="在数学理论中什么是椭圆曲线">在数学理论中什么是“椭圆曲线”？&lt;/h3>
&lt;blockquote>
&lt;p>椭圆曲线指，在特定条件下的特定点的集合所形成的规律（即椭圆曲线公式）。&lt;/p>
&lt;/blockquote>
&lt;h3 id="数字签名特点">数字签名特点？&lt;/h3>
&lt;blockquote>
&lt;p>每条信息都有一对密钥，其中一个是信息自身的密钥，另一个是公开的公钥。
在信息或者数据开始签名时用的是密钥，在进入验证时用的是公钥。
在验证时公钥是公用的，那如何进行准确识别每条信息或数据？
所有信息都可以被定义，所以公钥需要先向接收端进行注册（身份认证机构），这时就产生了“注册机”，在注册后身份认证机构会写入一串数字证书，然后在对信息签名时，会将数字证书和签名绑定到信息上一起发送到接收端，接收端会向身份认证机构确认密钥的正确性，从而判断密钥和信息是否匹配。&lt;/p>
&lt;/blockquote>
&lt;h3 id="签名过程是什么">签名过程是什么？&lt;/h3>
&lt;blockquote>
&lt;p>发送报文时，发送方用一个哈希函数从报文文本中生成报文摘要，然后用发送方的私钥对这个摘要进行加密，这个加密后的摘要将作为报文的数字签名和报文一起发送给接收方，接收方首先用与发送方一样的哈希函数从接收到的原始报文中计算出报文摘要，接着再公钥来对报文附加的数字签名进行解密，如果这两个摘要相同、那么接收方就能确认该报文是发送方的。&lt;/p>
&lt;/blockquote>
&lt;h3 id="什么是哈希函数">什么是哈希函数？&lt;/h3>
&lt;blockquote>
&lt;p>哈希函数（Hash Function），也称为散列函数，给定一个输入x，它会算出相应的输出H(x)。&lt;/p>
&lt;/blockquote>
&lt;h3 id="哈希函数的算法特点是什么">哈希函数的算法特点是什么？&lt;/h3>
&lt;blockquote>
&lt;p>1.输入x可以是任意长度的字符串。
2.输出结果即H(x)的长度是固定的。
3.计算 H(x) 的过程是高效的（对于长度为 n 的字符串 x ，计算出 H(x) 的时间复杂度应为 O(n) ）。&lt;/p>
&lt;/blockquote>
&lt;h3 id="哈希函数在运用时有什么要求">哈希函数在运用时有什么要求？&lt;/h3>
&lt;blockquote>
&lt;p>1、免碰撞：即不会出现输入 x≠y ，但是H(x)=H(y) 的情况，其实这个特点在理论上并不成立，比如目前比特币使用的 SHA256 算法，会有 2^256 种输出，如果我们进行 2^256 + 1 次输入，那么必然会产生一次碰撞，事实上，通过 理论证明 ，通过 2^130 次输入就会有99%的可能性发生一次碰撞。
2、隐匿性：对于一个给定的输出结果 H(x) ，想要逆推出输入 x ，在计算上是不可能的。如果想要得到 H(x) 的可能的原输入，不存在比穷举更好的方法。&lt;/p>
&lt;/blockquote>
&lt;h3 id="哈希算法的原理是什么">哈希算法的原理是什么？&lt;/h3>
&lt;blockquote>
&lt;p>是试图将一个空间的数据集映射到另外一个空间（通常比原空间要小），并利用质数将数据集能够均匀的映射。&lt;/p>
&lt;/blockquote>
&lt;h3 id="目前有哪些哈希算法">目前有哪些哈希算法？&lt;/h3>
&lt;blockquote>
&lt;p>md4、md5、sha系列等。&lt;/p>
&lt;/blockquote>
&lt;h2 id="使用">使用&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="nx">nacl&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s2">&amp;#34;tweetnacl&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//string和uint8Array互转
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//https://cloud.tencent.com/developer/ask/sof/302640
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//base64和uint8Array互转
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//https://blog.csdn.net/qq_35606400/article/details/125629074
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// uint8array转为base64字符串
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">uint8arrayToBase64&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">u8Arr&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nx">CHUNK_SIZE&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">0x8000&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">//arbitrary number
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kd">let&lt;/span> &lt;span class="nx">index&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nx">length&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">u8Arr&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nx">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nx">slice&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">index&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="nx">length&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">slice&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">u8Arr&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">subarray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">Math&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">index&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">CHUNK_SIZE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">length&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">result&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="nb">String&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">fromCharCode&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">apply&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">slice&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">index&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="nx">CHUNK_SIZE&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// web image base64图片格式: &amp;#34;data:image/png;base64,&amp;#34; + b64encoded;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// return &amp;#34;data:image/png;base64,&amp;#34; + btoa(result);
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nx">btoa&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">result&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">catch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">throw&lt;/span> &lt;span class="nx">e&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// base64字符串转为uint8array数组
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">base64ToUint8Array&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">base64String&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nx">padding&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;=&amp;#39;&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">repeat&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="mi">4&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="nx">base64String&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nx">base64&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">base64String&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">padding&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="nx">replace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sr">/\-/g&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;+&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="nx">replace&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sr">/_/g&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;/&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nx">rawData&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">atob&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">base64&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nx">outputArray&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Uint8Array&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">rawData&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kd">let&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="nx">rawData&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">outputArray&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">rawData&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">charCodeAt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">outputArray&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">catch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">throw&lt;/span> &lt;span class="nx">e&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// string转uint8array
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="nx">toUint8Arr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">str&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">buffer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kd">let&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="k">of&lt;/span> &lt;span class="nx">str&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">_code&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">charCodeAt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">_code&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mh">0x80&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">buffer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">_code&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">_code&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mh">0x800&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">buffer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">0xc0&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">_code&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">buffer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">0x80&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">_code&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="mh">0x3f&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">_code&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mh">0x10000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">buffer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">0xe0&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">_code&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="mi">12&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">buffer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">0x80&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">_code&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="mi">6&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="mh">0x3f&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">buffer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">0x80&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">_code&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="mh">0x3f&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">Uint8Array&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">buffer&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * 使用tweetnacl进行签名
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * signContent 签名内容
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">function&lt;/span> &lt;span class="nx">tweetnaclSign&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">signContent&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 生成 公钥、私钥
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// let keyMap = nacl.sign.keyPair()
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// let publicKey = keyMap.publicKey
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// let secretKey = keyMap.secretKey
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;待签名内容: &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">signContent&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;用户服务端的公钥和私钥&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nx">publicKey&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">base64ToUint8Array&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;BXJXQSSIuVCdHU7FUj/e4McA6MHVP0t7AR9tQg4GyF0=&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nx">secretKey&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">base64ToUint8Array&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;ZBsmNTR/pwQDSKX261V5g+7zgpfXY9ejRvLDPiK4GXwFcldBJIi5UJ0dTsVSP97gxwDowdU/S3sBH21CDgbIXQ==&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 字符串转为Uint8Array格式，以供签名
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kd">let&lt;/span> &lt;span class="nx">signArray&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">toUint8Arr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">signContent&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 进行签名
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kd">let&lt;/span> &lt;span class="nx">signature&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">nacl&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">sign&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">detached&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">signArray&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">secretKey&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 进行验签
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kd">let&lt;/span> &lt;span class="nx">verify&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">nacl&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">sign&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">detached&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">verify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">signArray&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">signature&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">publicKey&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;公钥&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">uint8arrayToBase64&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">publicKey&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;私钥&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">uint8arrayToBase64&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">secretKey&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;签名&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">uint8arrayToBase64&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">signature&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;验签成功&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">verify&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">let&lt;/span> &lt;span class="nx">msgData&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;哈哈哈哈&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">tweetnaclSign&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">msgData&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Git安装和使用</title><link>https://bllon.github.io/p/git-install/</link><pubDate>Sat, 22 Jul 2023 00:00:00 +0000</pubDate><guid>https://bllon.github.io/p/git-install/</guid><description>&lt;h2 id="介绍">介绍&lt;/h2>
&lt;blockquote>
&lt;p>&lt;strong>Git（读音为/gɪt/）是一个开源的分布式版本控制系统，
可以有效、高速地处理从很小到非常大的项目版本管理。
[1]也是Linus Torvalds为了帮助管理Linux内核开发而开发的一个开放源码的版本控制软件。&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;p>可以理解为一个本地的文件仓库， 你可以创建一个仓库， 然后管理里面的文件（修改，添加，删除），
每次提交都会产生一个版本， 假如你突然想回到之前的某一个版本， 可以通过git命令进行回退到之前的修改。
也可以多个人协作去管理一个仓库。&lt;/p>
&lt;h2 id="下载安装git">下载安装Git&lt;/h2>
&lt;p>&lt;strong>&lt;a class="link" href="https://git-scm.com/downloads" target="_blank" rel="noopener"
>官网下载地址&lt;/a>&lt;/strong>，直接下载最新版本即可&lt;/p>
&lt;p>&lt;img src="https://bllon.github.io/p/git-install/img.png"
width="1187"
height="725"
srcset="https://bllon.github.io/p/git-install/img_hubcfd9aa66dfe51b6290122d7eef0cd1f_264767_480x0_resize_box_3.png 480w, https://bllon.github.io/p/git-install/img_hubcfd9aa66dfe51b6290122d7eef0cd1f_264767_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="下载"
class="gallery-image"
data-flex-grow="163"
data-flex-basis="392px"
>&lt;/p>
&lt;p>接着点击下载的安装包，选择安装路径，一直下一步直到安装完成。&lt;/p>
&lt;p>验证安装： 在命令行输入git version 得到输出的git版本信息即代表安装成功&lt;/p>
&lt;h2 id="使用git">使用Git&lt;/h2>
&lt;p>配置git用户信息&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">git config --global user.name&lt;span class="o">=&lt;/span>“用户名”
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git config --global user.email&lt;span class="o">=&lt;/span>“邮箱”
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>创建一个文件夹（作为我们要管理的仓库）&lt;/li>
&lt;li>初始化git仓库
cmd进入命令行, 在该目录下执行 &lt;strong>git init&lt;/strong> 命令进行初始化仓库&lt;/li>
&lt;li>接着我们可以在仓库目录下进行文件的添加，修改，删除&lt;/li>
&lt;li>使用 &lt;strong>git status&lt;/strong> 命令查看当前仓库的状态，发现红色的文件名，为我们新增的文件&lt;/li>
&lt;li>使用 &lt;strong>git add .&lt;/strong> 命令将发生改变的文件提交到暂存库中，可以理解为一个编辑修改的区域&lt;/li>
&lt;li>使用 &lt;strong>git status&lt;/strong> 命令查看当前仓库的状态，发现绿色的文件名，为我们已添加到暂存库中的文件&lt;/li>
&lt;li>使用 &lt;strong>git commit&lt;/strong> 命令提交一个版本&lt;/li>
&lt;li>使用 &lt;strong>git log&lt;/strong> 命令查看我们提交的版本记录&lt;/li>
&lt;li>使用 &lt;strong>git reset &amp;ndash;hard [版本号]&lt;/strong> 命令可以回退到某个版本&lt;/li>
&lt;/ol>
&lt;p>具体操作如下：&lt;/p>
&lt;p>创建一个myblog文件下，命令行进入该目录&lt;/p>
&lt;p>&lt;img src="https://bllon.github.io/p/git-install/img_1.png"
width="871"
height="157"
srcset="https://bllon.github.io/p/git-install/img_1_hude2a7da5dea49f8ab83318917f555037_12284_480x0_resize_box_3.png 480w, https://bllon.github.io/p/git-install/img_1_hude2a7da5dea49f8ab83318917f555037_12284_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="初始化仓库"
class="gallery-image"
data-flex-grow="554"
data-flex-basis="1331px"
>&lt;/p>
&lt;p>&lt;img src="https://bllon.github.io/p/git-install/img_2.png"
width="770"
height="425"
srcset="https://bllon.github.io/p/git-install/img_2_hu287bc1f88453a299a4463e185f2370da_19709_480x0_resize_box_3.png 480w, https://bllon.github.io/p/git-install/img_2_hu287bc1f88453a299a4463e185f2370da_19709_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="添加文件"
class="gallery-image"
data-flex-grow="181"
data-flex-basis="434px"
>&lt;/p>
&lt;p>&lt;img src="https://bllon.github.io/p/git-install/img_3.png"
width="944"
height="275"
srcset="https://bllon.github.io/p/git-install/img_3_hu2ffee75afe64e9d427066aa4f88fd38a_13700_480x0_resize_box_3.png 480w, https://bllon.github.io/p/git-install/img_3_hu2ffee75afe64e9d427066aa4f88fd38a_13700_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="查看仓库状态， 发现有新的文件test.txt"
class="gallery-image"
data-flex-grow="343"
data-flex-basis="823px"
>&lt;/p>
&lt;p>&lt;img src="https://bllon.github.io/p/git-install/img_4.png"
width="581"
height="268"
srcset="https://bllon.github.io/p/git-install/img_4_hu9770289dc9bedbeffee617c9ae6e5829_11859_480x0_resize_box_3.png 480w, https://bllon.github.io/p/git-install/img_4_hu9770289dc9bedbeffee617c9ae6e5829_11859_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="查看仓库状态， 新的文件已被添加到暂存库中"
class="gallery-image"
data-flex-grow="216"
data-flex-basis="520px"
>&lt;/p>
&lt;p>&lt;img src="https://bllon.github.io/p/git-install/img_5.png"
width="656"
height="124"
srcset="https://bllon.github.io/p/git-install/img_5_hu1df660d24634a523a84c85e87c95e4c1_8286_480x0_resize_box_3.png 480w, https://bllon.github.io/p/git-install/img_5_hu1df660d24634a523a84c85e87c95e4c1_8286_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="修改完后，提交新的版本，-m为我们提交的信息"
class="gallery-image"
data-flex-grow="529"
data-flex-basis="1269px"
>&lt;/p>
&lt;p>&lt;img src="https://bllon.github.io/p/git-install/img_6.png"
width="796"
height="162"
srcset="https://bllon.github.io/p/git-install/img_6_hu3ecbe762f968faac3be71780f1130bce_13718_480x0_resize_box_3.png 480w, https://bllon.github.io/p/git-install/img_6_hu3ecbe762f968faac3be71780f1130bce_13718_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="查看历史版本，发现我们提交的一个版本"
class="gallery-image"
data-flex-grow="491"
data-flex-basis="1179px"
>&lt;/p>
&lt;p>&lt;img src="https://bllon.github.io/p/git-install/img_7.png"
width="716"
height="480"
srcset="https://bllon.github.io/p/git-install/img_7_huf97ade07e619d4dde434796a23394874_17149_480x0_resize_box_3.png 480w, https://bllon.github.io/p/git-install/img_7_huf97ade07e619d4dde434796a23394874_17149_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="对文件进行一次修改"
class="gallery-image"
data-flex-grow="149"
data-flex-basis="358px"
>&lt;/p>
&lt;p>&lt;img src="https://bllon.github.io/p/git-install/img_8.png"
width="868"
height="220"
srcset="https://bllon.github.io/p/git-install/img_8_hu570b8f1f5fed8cc7f4184f37b34bb275_15257_480x0_resize_box_3.png 480w, https://bllon.github.io/p/git-install/img_8_hu570b8f1f5fed8cc7f4184f37b34bb275_15257_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="发现文件出现修改"
class="gallery-image"
data-flex-grow="394"
data-flex-basis="946px"
>&lt;/p>
&lt;p>&lt;img src="https://bllon.github.io/p/git-install/img_9.png"
width="694"
height="408"
srcset="https://bllon.github.io/p/git-install/img_9_hu6644082f9bf749d03d42665fdb0e179b_22802_480x0_resize_box_3.png 480w, https://bllon.github.io/p/git-install/img_9_hu6644082f9bf749d03d42665fdb0e179b_22802_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="继续使用 git add .命令和 git commit命令进行提交版本"
class="gallery-image"
data-flex-grow="170"
data-flex-basis="408px"
>&lt;/p>
&lt;p>&lt;img src="https://bllon.github.io/p/git-install/img_10.png"
width="786"
height="310"
srcset="https://bllon.github.io/p/git-install/img_10_hu38b3fe266cb955365fe43fdf272f0c47_20474_480x0_resize_box_3.png 480w, https://bllon.github.io/p/git-install/img_10_hu38b3fe266cb955365fe43fdf272f0c47_20474_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="此时出现了两个版本"
class="gallery-image"
data-flex-grow="253"
data-flex-basis="608px"
>&lt;/p>
&lt;p>&lt;img src="https://bllon.github.io/p/git-install/img_11.png"
width="997"
height="71"
srcset="https://bllon.github.io/p/git-install/img_11_hucd3d4cb85329931767e261effa833be1_7015_480x0_resize_box_3.png 480w, https://bllon.github.io/p/git-install/img_11_hucd3d4cb85329931767e261effa833be1_7015_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="回退到第一次修改的版本"
class="gallery-image"
data-flex-grow="1404"
data-flex-basis="3370px"
>&lt;/p>
&lt;p>&lt;img src="https://bllon.github.io/p/git-install/img_11.png"
width="997"
height="71"
srcset="https://bllon.github.io/p/git-install/img_11_hucd3d4cb85329931767e261effa833be1_7015_480x0_resize_box_3.png 480w, https://bllon.github.io/p/git-install/img_11_hucd3d4cb85329931767e261effa833be1_7015_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="再次查看文件，发现内容已经变成第一版的了"
class="gallery-image"
data-flex-grow="1404"
data-flex-basis="3370px"
>&lt;/p>
&lt;p>git还有其他很多命令，可以参考学习 &lt;a class="link" href="https://www.runoob.com/git/git-tutorial.html" target="_blank" rel="noopener"
>Git菜鸟教程&lt;/a>&lt;/p>
&lt;h2 id="github注册使用">Github注册使用&lt;/h2>
&lt;p>&lt;strong>Github可以理解为一个远程的仓库，我们可以把本地仓库和远程仓库关联起来，
进而每次提交版本都可以将文件推送到远程仓库，也可以将远程仓库下载到本地&lt;/strong>&lt;/p>
&lt;h3 id="注册">注册&lt;/h3>
&lt;p>在 &lt;strong>&lt;a class="link" href="https://github.com/" target="_blank" rel="noopener"
>Github网站&lt;/a>&lt;/strong> 注册一个账号，点击Sign up一般使用邮箱注册即可，&lt;/p>
&lt;p>注册完点击Sign in登录&lt;/p>
&lt;p>点击右上角头像，点击Your repositories进入自己的仓库列表页面， 点击New新建一个远程仓库，只需要填写仓库的名字即可&lt;/p>
&lt;p>我这里创建一个test的仓库&lt;/p>
&lt;p>&lt;img src="https://bllon.github.io/p/git-install/img_13.png"
width="1537"
height="770"
srcset="https://bllon.github.io/p/git-install/img_13_hud8d677e8562f1399471c1d10e7c6943a_65494_480x0_resize_box_3.png 480w, https://bllon.github.io/p/git-install/img_13_hud8d677e8562f1399471c1d10e7c6943a_65494_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="使用命令去提交到远程仓库"
class="gallery-image"
data-flex-grow="199"
data-flex-basis="479px"
>&lt;/p>
&lt;h3 id="提交到远程仓库">提交到远程仓库&lt;/h3>
&lt;p>由于我们前面仓库已经建好了，所以不需要前面的git init等初始化操作&lt;/p>
&lt;p>第一次提交需要登录远程仓库，需要使用Github的邮箱账号密码，&lt;/p>
&lt;p>或者使用Token （个人头像下的Settings中，Developer Settings下Personal access tokens (classic)，New一个新的token，
只需要勾选repo和workflow权限即可）&lt;/p>
&lt;p>依次执行&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">git remote add origin https://github.com/bllon/test.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git push -u origin master
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>再此刷新远程仓库页面，即可看到我们的仓库文件&lt;/p></description></item><item><title>go 报错undefined syscall.SIGUSR1</title><link>https://bllon.github.io/p/go-windows-syscall-sigusr1/</link><pubDate>Sat, 22 Jul 2023 00:00:00 +0000</pubDate><guid>https://bllon.github.io/p/go-windows-syscall-sigusr1/</guid><description>&lt;h2 id="解决">解决&lt;/h2>
&lt;blockquote>
&lt;p>找到go包的src目录下的syscall/types_windows.go文件
修改如下：&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">var&lt;/span> &lt;span class="nx">signals&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;hangup&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">2&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;interrupt&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">3&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;quit&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">4&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;illegal instruction&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">5&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;trace/breakpoint trap&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">6&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;aborted&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">7&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;bus error&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">8&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;floating point exception&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">9&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;killed&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">10&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;user defined signal 1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">11&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;segmentation fault&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">12&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;user defined signal 2&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">13&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;broken pipe&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">14&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;alarm clock&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">15&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;terminated&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/** 兼容windows start */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">16&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;SIGUSR1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">17&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;SIGUSR2&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">18&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s">&amp;#34;SIGTSTP&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/** 兼容windows end */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/** 兼容windows start */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">Kill&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">...&lt;/span>&lt;span class="kd">interface&lt;/span>&lt;span class="p">{})&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">const&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">SIGUSR1&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nf">Signal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">0x10&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">SIGUSR2&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nf">Signal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">0x11&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">SIGTSTP&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nf">Signal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">0x12&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/** 兼容windows end */&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Hugo博客搭建</title><link>https://bllon.github.io/p/hugo-blog/</link><pubDate>Sat, 22 Jul 2023 00:00:00 +0000</pubDate><guid>https://bllon.github.io/p/hugo-blog/</guid><description>&lt;h2 id="介绍">介绍&lt;/h2>
&lt;p>&lt;strong>&lt;a class="link" href="https://gohugo.io/installation/windows/" target="_blank" rel="noopener"
>官方下载文档&lt;/a>&lt;/strong>&lt;/p>
&lt;p>&lt;strong>&lt;a class="link" href="https://www.gohugo.org/" target="_blank" rel="noopener"
>Hugo中文文档&lt;/a>&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Hugo是由Go语言实现的静态网站生成器。简单、易用、高效、易扩展、快速部署。&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;h2 id="下载">下载&lt;/h2>
&lt;p>以下两种方式，任选其中一种。当然官方也提供了其他方式，执行对应的命令即可。&lt;/p>
&lt;ol>
&lt;li>对于开发者，可以选择源代码构建方式，前提是需要安装Git和Go以及gcc编译器，这些我在其他文章都有介绍&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">go install -tags extended github.com/gohugoio/hugo@latest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>对于新手小白或者只想简单的搞一个博客，推荐使用winget安装方式，这是微软自带的免费的包管理器&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">winget install Hugo.Hugo.Extended
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="选择博客主题模板">选择博客主题模板&lt;/h2>
&lt;p>我选的是这款 &lt;strong>&lt;a class="link" href="https://themes.gohugo.io/themes/hugo-theme-stack/" target="_blank" rel="noopener"
>Stack&lt;/a>&lt;/strong>&lt;/p>
&lt;p>&lt;strong>&lt;a class="link" href="https://github.com/CaiJimmy/hugo-theme-stack-starter" target="_blank" rel="noopener"
>Github地址&lt;/a>&lt;/strong>&lt;/p>
&lt;h2 id="运行">运行&lt;/h2>
&lt;ol>
&lt;li>将上方的Github仓库下载下来
&lt;img src="https://bllon.github.io/p/hugo-blog/img.png"
width="1171"
height="673"
srcset="https://bllon.github.io/p/hugo-blog/img_hu4f268d8ae1f4d2260cf7a20205266318_74446_480x0_resize_box_3.png 480w, https://bllon.github.io/p/hugo-blog/img_hu4f268d8ae1f4d2260cf7a20205266318_74446_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="下载仓库压缩包"
class="gallery-image"
data-flex-grow="173"
data-flex-basis="417px"
>&lt;/li>
&lt;li>解压，然后把文件夹改成你想要的名字&lt;/li>
&lt;li>cmd进入命令行，进到该目录下，输入hugo server回车，服务就会启动，给出对应的博客地址：http://localhost:1313/
&lt;img src="https://bllon.github.io/p/hugo-blog/img_1.png"
width="1465"
height="663"
srcset="https://bllon.github.io/p/hugo-blog/img_1_hu0a2ee8c821768857dd631a6b8d56d167_49413_480x0_resize_box_3.png 480w, https://bllon.github.io/p/hugo-blog/img_1_hu0a2ee8c821768857dd631a6b8d56d167_49413_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="启动博客服务"
class="gallery-image"
data-flex-grow="220"
data-flex-basis="530px"
>&lt;/li>
&lt;li>浏览器进入博客网站
&lt;img src="https://bllon.github.io/p/hugo-blog/img_2.png"
width="1920"
height="892"
srcset="https://bllon.github.io/p/hugo-blog/img_2_hu4d5f3f571ac40f8782d5097e49a55db5_777931_480x0_resize_box_3.png 480w, https://bllon.github.io/p/hugo-blog/img_2_hu4d5f3f571ac40f8782d5097e49a55db5_777931_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="进入博客网站"
class="gallery-image"
data-flex-grow="215"
data-flex-basis="516px"
>&lt;/li>
&lt;/ol>
&lt;p>至此博客基本搭建完成&lt;/p>
&lt;h2 id="网站配置">网站配置&lt;/h2>
&lt;p>所有的配置文件都在config/_default目录下，我们在修改内容的同时，网站会实时进行更新&lt;/p>
&lt;h3 id="修改网站标题">修改网站标题&lt;/h3>
&lt;p>config.toml
&lt;img src="https://bllon.github.io/p/hugo-blog/img_3.png"
width="938"
height="491"
srcset="https://bllon.github.io/p/hugo-blog/img_3_hu9d56c29f50c4c25c20347732c7e23b0c_43006_480x0_resize_box_3.png 480w, https://bllon.github.io/p/hugo-blog/img_3_hu9d56c29f50c4c25c20347732c7e23b0c_43006_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="修改网站标题"
class="gallery-image"
data-flex-grow="191"
data-flex-basis="458px"
>&lt;/p>
&lt;h3 id="修改菜单">修改菜单&lt;/h3>
&lt;p>menu.toml&lt;/p>
&lt;p>我们可以在 &lt;strong>&lt;a class="link" href="https://www.iconfont.cn/" target="_blank" rel="noopener"
>阿里图标库&lt;/a>&lt;/strong> 下载我们喜欢的图标，svg格式，我是用的是128大小，070707颜色
&lt;img src="https://bllon.github.io/p/hugo-blog/img_4.png"
width="886"
height="680"
srcset="https://bllon.github.io/p/hugo-blog/img_4_hudae6fd64522ff9221b655950fec272a9_50378_480x0_resize_box_3.png 480w, https://bllon.github.io/p/hugo-blog/img_4_hudae6fd64522ff9221b655950fec272a9_50378_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="修改网站菜单"
class="gallery-image"
data-flex-grow="130"
data-flex-basis="312px"
>&lt;/p>
&lt;h3 id="修改副标题">修改副标题&lt;/h3>
&lt;p>params.toml
&lt;img src="https://bllon.github.io/p/hugo-blog/img_5.png"
width="862"
height="690"
srcset="https://bllon.github.io/p/hugo-blog/img_5_hu091d28fc6ffc61ac2ef8ca1c21c7bbf5_53575_480x0_resize_box_3.png 480w, https://bllon.github.io/p/hugo-blog/img_5_hu091d28fc6ffc61ac2ef8ca1c21c7bbf5_53575_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="修改网站副标题和头像"
class="gallery-image"
data-flex-grow="124"
data-flex-basis="299px"
>&lt;/p>
&lt;h3 id="新建文章">新建文章&lt;/h3>
&lt;p>在content/post目录下，每个文件夹对应一篇文章，新建index.md（也可以通过hugo命令方式创建），里面就是写文章的配置和内容，我们可以参考示例文章进行更改&lt;/p>
&lt;p>&lt;img src="https://bllon.github.io/p/hugo-blog/img_6.png"
width="1013"
height="628"
srcset="https://bllon.github.io/p/hugo-blog/img_6_hu85fade64163e4f7464678c5c1a41b6dc_55794_480x0_resize_box_3.png 480w, https://bllon.github.io/p/hugo-blog/img_6_hu85fade64163e4f7464678c5c1a41b6dc_55794_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="文章内容"
class="gallery-image"
data-flex-grow="161"
data-flex-basis="387px"
>&lt;/p>
&lt;h3 id="更多配置">更多配置&lt;/h3>
&lt;p>更多详细的配置，可以去看作者的官方文档 &lt;strong>&lt;a class="link" href="https://stack.jimmycai.com/" target="_blank" rel="noopener"
>Stack&lt;/a>&lt;/strong>&lt;/p>
&lt;p>里面包括 自定义页头页脚html内容， 开启评论， 嵌入视频， 图片等等&lt;/p>
&lt;h2 id="发布github">发布Github&lt;/h2>
&lt;p>在命令行博客目录下输入hugo，即可生成public目录，里面就是编译生成好的静态博客目录，只需要将该目录和远程仓库绑定即可&lt;/p>
&lt;p>在Github分类下有一篇文章介绍创建远程仓库及使用git推送， 只需要创建一个bllon.github.io名称的仓库即可， bllon是我的名称，可以随意起名&lt;/p>
&lt;p>接着我们在仓库设置下的Page下使用们的分支即可
&lt;img src="https://bllon.github.io/p/hugo-blog/img_7.png"
width="1502"
height="839"
srcset="https://bllon.github.io/p/hugo-blog/img_7_hu9e07dabcf26edb51ad3fd2818aebbb5f_76474_480x0_resize_box_3.png 480w, https://bllon.github.io/p/hugo-blog/img_7_hu9e07dabcf26edb51ad3fd2818aebbb5f_76474_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Github Page配置"
class="gallery-image"
data-flex-grow="179"
data-flex-basis="429px"
>&lt;/p>
&lt;p>浏览器输入bllon.github.io即可访问我们的博客页面&lt;/p>
&lt;h2 id="配置github-actions自动部署">配置Github Actions自动部署&lt;/h2>
&lt;p>&lt;strong>我们将博客目录作为一个推送仓库，每次提交到这个仓库，github的actions就会自动触发任务，
将自动编译得到public目录并推送到另一个仓库bllon.github.io&lt;/strong>&lt;/p>
&lt;p>只需要改动.github/workflows目录下的deploy.yml文件&lt;/p>
&lt;p>&lt;img src="https://bllon.github.io/p/hugo-blog/img_8.png"
width="828"
height="309"
srcset="https://bllon.github.io/p/hugo-blog/img_8_hub011eee6a252d73668cfa82daf618003_18502_480x0_resize_box_3.png 480w, https://bllon.github.io/p/hugo-blog/img_8_hub011eee6a252d73668cfa82daf618003_18502_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="修改分支"
class="gallery-image"
data-flex-grow="267"
data-flex-basis="643px"
>&lt;/p>
&lt;p>&lt;img src="https://bllon.github.io/p/hugo-blog/img_9.png"
width="1362"
height="416"
srcset="https://bllon.github.io/p/hugo-blog/img_9_hue7bbc2be2efdeca6f307192f9a7e40ff_47458_480x0_resize_box_3.png 480w, https://bllon.github.io/p/hugo-blog/img_9_hue7bbc2be2efdeca6f307192f9a7e40ff_47458_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="修改部署任务"
class="gallery-image"
data-flex-grow="327"
data-flex-basis="785px"
>&lt;/p>
&lt;p>在项目仓库下的settings中创建 PERSONAL_TOKEN 环境变量
&lt;img src="https://bllon.github.io/p/hugo-blog/img_10.png"
width="1681"
height="883"
srcset="https://bllon.github.io/p/hugo-blog/img_10_hu96571e1e7ece14b909d5230183fcb324_83674_480x0_resize_box_3.png 480w, https://bllon.github.io/p/hugo-blog/img_10_hu96571e1e7ece14b909d5230183fcb324_83674_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="创建 PERSONAL_TOKEN 环境变量"
class="gallery-image"
data-flex-grow="190"
data-flex-basis="456px"
>&lt;/p>
&lt;p>在xx.github.io项目的settings下的actions/general下
需要勾选权限：
Allow all aactions and reusable workflows
Require approval for first-time contributors
Read and write permissions或者第二个&lt;/p>
&lt;p>token需要权限：gist, read:org, repo, workflow&lt;/p>
&lt;p>在项目仓库下的Actions中可以查看部署的任务，每次push提交远程仓库可以自动触发，也可以在GitHub仓库页面去执行和管理
&lt;img src="https://bllon.github.io/p/hugo-blog/img_11.png"
width="1804"
height="810"
srcset="https://bllon.github.io/p/hugo-blog/img_11_hufceea7b9b5e214d861bda5d63953108d_89297_480x0_resize_box_3.png 480w, https://bllon.github.io/p/hugo-blog/img_11_hufceea7b9b5e214d861bda5d63953108d_89297_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="部署任务"
class="gallery-image"
data-flex-grow="222"
data-flex-basis="534px"
>&lt;/p>
&lt;p>至此完整的hugo博客搭建流程完毕！&lt;/p></description></item><item><title>MinGW安装（gcc）</title><link>https://bllon.github.io/p/mingw-install/</link><pubDate>Sat, 22 Jul 2023 00:00:00 +0000</pubDate><guid>https://bllon.github.io/p/mingw-install/</guid><description>&lt;h2 id="介绍">介绍&lt;/h2>
&lt;blockquote>
&lt;p>&lt;strong>MinGW，是Minimalist GNU for Windows的缩写。
它是一个可自由使用和自由发布的Windows特定头文件和使用GNU工具集导入库的集合，
允许你在GNU/Linux和Windows平台生成本地的Windows程序而不需要第三方C运行时（C Runtime）库。
MinGW 是一组包含文件和端口库，其功能是允许控制台模式的程序使用微软的标准C运行时（C Runtime）库（MSVCRT.DLL）,
该库在所有的 NT OS 上有效，在所有的 Windows 95发行版以上的 Windows OS 有效，
使用基本运行时，你可以使用 GCC 写控制台模式的符合美国标准化组织（ANSI）程序，
可以使用微软提供的 C 运行时（C Runtime）扩展，与基本运行时相结合，
就可以有充分的权利既使用 CRT（C Runtime）又使用 WindowsAPI功能&lt;/strong>。&lt;/p>
&lt;/blockquote>
&lt;h2 id="下载安装">下载安装&lt;/h2>
&lt;p>&lt;a class="link" href="https://sourceforge.net/projects/mingw-w64/files/mingw-w64/" target="_blank" rel="noopener"
>下载地址&lt;/a>&lt;/p>
&lt;p>选择一个版本, 例如 MinGW-W64 GCC-8.1.0&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">64位下载 x86_64-posix-seh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">32位下载 x86_64-win32-seh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>点击对应链接等待5秒下载, 下载后解压里面会包含一个mingw64的目录, 只需要保留该目录即可&lt;/p>
&lt;p>接着配置环境变量, 将mingw64/bin目录添加到系统变量的Path变量中&lt;/p>
&lt;h2 id="验证安装">验证安装&lt;/h2>
&lt;p>cmd打开一个命令行窗口, 输入gcc -v 得到gcc的版本信息即安装成功&lt;/p></description></item><item><title>nvm安装</title><link>https://bllon.github.io/p/nvm-install/</link><pubDate>Sat, 22 Jul 2023 00:00:00 +0000</pubDate><guid>https://bllon.github.io/p/nvm-install/</guid><description>&lt;h2 id="nvm下载地址">nvm下载地址&lt;/h2>
&lt;p>&lt;a class="link" href="https://github.com/coreybutler/nvm-windows/releases" target="_blank" rel="noopener"
>下载地址&lt;/a>&lt;/p>
&lt;p>选择nvm-setup.exe&lt;/p>
&lt;p>选择目录和nodejs环境目录直接下载&lt;/p>
&lt;p>查看版本&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">nvm version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="安装nodejs">安装nodejs&lt;/h2>
&lt;h3 id="安装指定版本node">安装指定版本node&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">nvm install 16.18.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="切换指定版本node">切换指定版本node&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">nvm use 16.18.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="查看已安装的node列表">查看已安装的node列表&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">nvm list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="卸载指定版本node">卸载指定版本node&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">nvm uninstall 16.18.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Protobuf安装</title><link>https://bllon.github.io/p/protobuf-install/</link><pubDate>Sat, 22 Jul 2023 00:00:00 +0000</pubDate><guid>https://bllon.github.io/p/protobuf-install/</guid><description>&lt;h2 id="下载地址">下载地址&lt;/h2>
&lt;p>&lt;a class="link" href="https://github.com/protocolbuffers/protobuf/releases?page=7" target="_blank" rel="noopener"
>下载地址&lt;/a>&lt;/p>
&lt;p>解压配置环境变量&lt;/p>
&lt;h2 id="mac下安装">mac下安装&lt;/h2>
&lt;p>&lt;a class="link" href="https://www.jianshu.com/p/4b9b042e812e" target="_blank" rel="noopener"
>https://www.jianshu.com/p/4b9b042e812e&lt;/a>&lt;/p></description></item><item><title>Go环境安装</title><link>https://bllon.github.io/p/go-install/</link><pubDate>Fri, 21 Jul 2023 00:00:00 +0000</pubDate><guid>https://bllon.github.io/p/go-install/</guid><description>&lt;h2 id="windows下安装">Windows下安装&lt;/h2>
&lt;h3 id="下载go语言sdk">下载Go语言sdk&lt;/h3>
&lt;p>&lt;a class="link" href="https://golang.google.cn/dl/" target="_blank" rel="noopener"
>sdk下载地址&lt;/a> , 找到stable version版本, 目前已经更新到1.20.6&lt;/p>
&lt;p>windows系统64位下载windows-amd64.zip, 32位下载windows-386.zip, 一般都是64位&lt;/p>
&lt;p>下载完解压到一个go的目录下&lt;/p>
&lt;h3 id="配置环境变量">配置环境变量&lt;/h3>
&lt;p>打开windows文件管理器, 鼠标右键点击此电脑, 点击属性, 点击高级系统设置进入系统属性, 点击环境变量&lt;/p>
&lt;p>新建系统变量&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">GOROOT =&amp;gt; go的sdk解压存放目录（例如D:/go）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">GOPATH =&amp;gt; 新建go的项目目录（例如D:/project/go）
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>找到系统变量中的Path, 双击进入, 新建&lt;/p>
&lt;p>%GOROOT%\bin&lt;/p>
&lt;p>%GOPATH%\bin&lt;/p>
&lt;h3 id="验证安装">验证安装&lt;/h3>
&lt;p>win + R 组合键, 输入cmd进入命令行, 输入go version, 输出得到go version go1.20.6 windows/amd64, 即代表安装成功&lt;/p>
&lt;h3 id="配置go的代理环境">配置go的代理环境&lt;/h3>
&lt;p>继续在命令行终端里输入并回车&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">go env -w &lt;span class="nv">GO111MODULE&lt;/span>&lt;span class="o">=&lt;/span>on
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">go env -w &lt;span class="nv">GOPROXY&lt;/span>&lt;span class="o">=&lt;/span>https://goproxy.cn,direct
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>至此windows下的Go环境安装完毕&lt;/p>
&lt;h2 id="linux下安装">Linux下安装&lt;/h2>
&lt;h3 id="下载go语言sdk-1">下载Go语言sdk&lt;/h3>
&lt;p>&lt;a class="link" href="https://golang.google.cn/dl/" target="_blank" rel="noopener"
>sdk下载地址&lt;/a> , 找到stable version版本, 目前已经更新到1.20.6&lt;/p>
&lt;p>linux系统64位下载linux-amd64.tar.gz, 32位下载linux-386.tar.gz, 一般都是64位, 鼠标右键可以复制对应链接&lt;/p>
&lt;p>下载完解压到一个go的目录下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#下载&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget https://golang.google.cn/dl/go1.20.6.linux-amd64.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#解压&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar -xzvf go1.20.6.linux-amd64.tar.gz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="配置环境变量-1">配置环境变量&lt;/h3>
&lt;p>修改环境变量文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">vim /etc/profile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在最后一行添加&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">GOROOT&lt;/span>&lt;span class="o">=/&lt;/span>&lt;span class="n">usr&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">local&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">go&lt;/span> &lt;span class="o">//&lt;/span>&lt;span class="n">GOROOT为解压的go&lt;/span> &lt;span class="n">sdk目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">export&lt;/span> &lt;span class="n">PATH&lt;/span>&lt;span class="o">=$&lt;/span>&lt;span class="n">PATH&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">$&lt;/span>&lt;span class="n">GOROOT&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">bin&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>保存文件, 执行source /etc/profile使环境变量生效&lt;/p>
&lt;h3 id="验证安装-1">验证安装&lt;/h3>
&lt;p>直接在终端输入go version, 输出得到go version go1.20.6 linux/amd64, 即代表安装成功&lt;/p>
&lt;h3 id="配置go的代理环境-1">配置go的代理环境&lt;/h3>
&lt;p>继续在命令行终端里输入并回车&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">go env -w &lt;span class="nv">GO111MODULE&lt;/span>&lt;span class="o">=&lt;/span>on
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">go env -w &lt;span class="nv">GOPROXY&lt;/span>&lt;span class="o">=&lt;/span>https://goproxy.cn,direct
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>至此linux下的Go环境安装完毕&lt;/p></description></item><item><title>开启新篇章</title><link>https://bllon.github.io/p/hello/</link><pubDate>Thu, 20 Jul 2023 00:00:00 +0000</pubDate><guid>https://bllon.github.io/p/hello/</guid><description>&lt;img src="https://bllon.github.io/p/hello/hello.jpg" alt="Featured image of post 开启新篇章" />&lt;p>欢迎来到我的GitHub个人页面, 我将在这里分享我所有的编程创作历程和学习经验, 请为我点亮star, 让我们一起成为更好的开发者!&lt;/p></description></item></channel></rss>